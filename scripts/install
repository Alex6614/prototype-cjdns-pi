#!/bin/sh

set -e

TAG_PROTOTYPE_CJDNS_PI2=master
TAG_CJDNS=cjdns-v17.3

# Get tools
if ! [ "$(which git)" ] || ! [ "$(which nodejs)" ] || ! [ "$(which iperf3)" ]; then
	sudo apt-get update
	sudo apt-get install git nodejs iperf3
fi

# Download prototype-cjdns-pi2 repo and checkout TAG_PROTOTYPE_CJDNS_PI2 tag
if ! [ -d "prototype-cjdns-pi2" ]; then
	git clone https://github.com/tomeshnet/prototype-cjdns-pi2.git
	cd prototype-cjdns-pi2 && git checkout $TAG_PROTOTYPE_CJDNS_PI2 && cd ..
fi

# Install bring-up script for the Mesh Point interface to /usr/bin
sudo cp prototype-cjdns-pi2/scripts/mesh /usr/bin/mesh

# Configure systemd to start mesh.service on system boot
sudo cp prototype-cjdns-pi2/scripts/mesh.service /lib/systemd/system/mesh.service
sudo chmod 644 /lib/systemd/system/mesh.service
sudo systemctl daemon-reload
sudo systemctl enable mesh.service

# Download cjdns repo and checkout TAG_CJDNS tag
if ! [ -d "/opt/cjdns" ]; then
	here=`pwd`
	sudo git clone https://github.com/cjdelisle/cjdns.git /opt/cjdns
	cd /opt/cjdns && git checkout $CJDNS_TAG && cd $here
fi

# Build cjdns
if ! [ -x "/opt/cjdns/cjdroute" ]; then
	here=`pwd`
	cd /opt/cjdns && sudo NO_TEST=1 Seccomp_NO=1 CFLAGS="-s -static -Wall -mfpu=neon -mcpu=cortex-a7 -mtune=cortex-a7 -fomit-frame-pointer -marm" ./do && cd $here
fi

# Install cjdns to /usr/bin
sudo cp /opt/cjdns/cjdroute /usr/bin/cjdroute

# Configure systemd to start cjdns.service on system boot
sudo cp /opt/cjdns/contrib/systemd/cjdns.service /lib/systemd/system/cjdns.service
sudo chmod 644 /lib/systemd/system/cjdns.service
sudo systemctl daemon-reload
sudo systemctl enable cjdns.service

# IPFS
if [ ! -x "$(command -v ipfs)" ] && [ ! -z "$WITH_IPFS" -a "$WITH_IPFS" = "true" ]; then
    # Install and initialize IPFS
    GO_IPFS_VERSION=v0.4.2
    wget "https://dist.ipfs.io/go-ipfs/${GO_IPFS_VERSION}/go-ipfs_${GO_IPFS_VERSION}_linux-arm.tar.gz" -O go-ipfs.tar.gz
    tar xvfz go-ipfs.tar.gz
    sudo cp go-ipfs/ipfs /usr/local/bin/ipfs
    sudo chown root:staff /usr/local/bin/ipfs
    ipfs init

    # Configure systemd to start ipfs-daemon.service on system boot
    sudo cp prototype-cjdns-pi2/scripts/ipfs-daemon.service /lib/systemd/system/ipfs-daemon.service
    sudo systemctl daemon-reload
    sudo systemctl enable ipfs-daemon.service
fi

# Reboot device
sudo reboot
